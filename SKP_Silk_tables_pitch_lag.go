package silk

import "math"

var SKP_Silk_pitch_lag_NB_CDF [130]uint16 = [130]uint16{0, 194, 395, 608, 841, 1099, 1391, 1724, 2105, 2544, 3047, 3624, 4282, 5027, 5865, 6799, 7833, 8965, 0x27D1, 11510, 12910, 0x382B, 0x3E21, 0x4441, 0x4A79, 0x50B8, 0x56EC, 0x5D06, 0x62F7, 0x68B2, 0x6E2E, 0x7365, 0x7853, 0x7CF8, 33110, 0x8573, 0x8954, 0x8D02, 0x9085, 0x93E5, 0x972A, 0x9A5B, 0x9D7F, 0xA09B, 0xA3B2, 0xA6C8, 0xA9DD, 0xACF1, 0xB005, 0xB317, 46630, 0xB92E, 0xBC2F, 0xBF25, 0xC20F, 0xC4EB, 0xC7B6, 0xCA70, 0xCD16, 0xCFA9, 0xD227, 0xD490, 0xD6E3, 0xD920, 0xDB48, 0xDD5A, 0xDF56, 0xE13D, 0xE30E, 58570, 0xE671, 0xE802, 0xE97F, 0xEAE6, 0xEC38, 60790, 0xEE9F, 0xEFB3, 61620, 0xF1A0, 0xF27B, 0xF343, 0xF3FA, 0xF4A1, 0xF53A, 0xF5C6, 0xF645, 0xF6BA, 0xF725, 0xF788, 0xF7E3, 0xF838, 0xF887, 0xF8D2, 0xF919, 0xF95C, 0xF99D, 0xF9DB, 0xFA17, 0xFA51, 0xFA8A, 0xFAC2, 0xFAF8, 0xFB2D, 0xFB62, 0xFB96, 0xFBC9, 0xFBFC, 0xFC2E, 0xFC60, 0xFC91, 0xFCC2, 0xFCF2, 0xFD23, 0xFD53, 0xFD83, 0xFDB2, 0xFDE2, 0xFE11, 0xFE40, 0xFE6F, 0xFE9D, 0xFECB, 0xFEF8, 0xFF25, 0xFF51, 0xFF7D, 0xFFA9, 0xFFD4, math.MaxUint16}
var SKP_Silk_pitch_lag_NB_CDF_offset int32 = 43
var SKP_Silk_pitch_contour_NB_CDF [12]uint16 = [12]uint16{0, 0x386D, 0x489B, 0x641C, 0x753D, 0x882B, 0x9E95, 0xBD2A, 54460, 0xE699, 62990, math.MaxUint16}
var SKP_Silk_pitch_contour_NB_CDF_offset int32 = 5
var SKP_Silk_pitch_lag_MB_CDF [194]uint16 = [194]uint16{0, 132, 266, 402, 542, 686, 838, 997, 1167, 1349, 1546, 1760, 1993, 2248, 2528, 2835, 3173, 3544, 3951, 4397, 4882, 5411, 5984, 6604, 7270, 7984, 8745, 9552, 0x28A5, 11300, 0x2FCB, 0x3396, 0x3781, 0x3B87, 0x3FA1, 0x43CB, 18430, 0x4C33, 0x5063, 0x548A, 0x58A0, 0x5CA0, 24710, 0x644D, 26610, 0x6B73, 0x6ECE, 0x7204, 0x7513, 0x77FD, 0x7AC3, 0x7D68, 0x7FEF, 33370, 0x84AC, 0x86E9, 0x8913, 35630, 0x8D3D, 0x8F43, 0x9142, 0x933C, 0x9533, 0x9729, 0x991F, 0x9B15, 0x9D0E, 0x9F09, 0xA106, 0xA305, 0xA507, 0xA709, 0xA90D, 0xAB11, 0xAD15, 0xAF18, 0xB118, 0xB315, 0xB50F, 0xB703, 0xB8F3, 0xBADC, 0xBCBF, 0xBE9B, 0xC070, 0xC23C, 0xC401, 0xC5BD, 0xC771, 0xC91C, 0xCABE, 0xCC58, 0xCDEA, 0xCF72, 53490, 0xD26A, 0xD3D9, 0xD540, 0xD69E, 0xD7F4, 0xD942, 0xDA88, 0xDBC5, 0xDCFB, 0xDE29, 0xDF4F, 0xE06D, 0xE183, 0xE291, 0xE397, 0xE494, 0xE58A, 0xE676, 0xE75A, 0xE836, 0xE908, 0xE9D1, 60050, 0xEB49, 0xEBF8, 0xEC9E, 0xED3C, 0xEDD2, 0xEE60, 0xEEE7, 0xEF68, 61410, 0xF056, 0xF0C4, 0xF12E, 0xF193, 61940, 0xF251, 0xF2AB, 62210, 0xF355, 0xF3A6, 0xF3F4, 0xF440, 0xF48A, 0xF4D2, 0xF518, 0xF55C, 0xF59F, 0xF5E1, 0xF621, 0xF660, 0xF69F, 0xF6DC, 0xF718, 0xF754, 0xF78F, 0xF7CA, 0xF803, 0xF83D, 0xF875, 0xF8AD, 0xF8E5, 0xF91C, 0xF953, 0xF989, 0xF9BF, 0xF9F4, 0xFA29, 0xFA5E, 0xFA93, 0xFAC7, 0xFAFC, 0xFB30, 0xFB64, 0xFB99, 0xFBCD, 0xFC01, 0xFC35, 0xFC69, 0xFC9D, 0xFCD1, 0xFD05, 0xFD38, 0xFD6B, 0xFD9D, 0xFDCF, 0xFE00, 0xFE30, 0xFE61, 0xFE90, 0xFEBF, 0xFEEE, 0xFF1C, 0xFF4A, 0xFF77, 0xFFA5, 65490, math.MaxUint16}
var SKP_Silk_pitch_lag_MB_CDF_offset int32 = 64
var SKP_Silk_pitch_lag_WB_CDF [258]uint16 = [258]uint16{0, 106, 213, 321, 429, 539, 651, 766, 884, 1005, 1132, 1264, 1403, 1549, 1705, 1870, 2047, 2236, 2439, 2658, 2893, 3147, 3420, 3714, 4030, 4370, 4736, 5127, 5546, 5993, 6470, 6978, 7516, 8086, 8687, 9320, 9985, 10680, 0x2C8D, 0x2F7E, 0x328A, 0x35B0, 0x38EC, 15420, 0x3F9E, 0x430E, 0x4689, 0x4A0B, 0x4D91, 0x5117, 0x5499, 0x5813, 0x5B83, 0x5EE5, 0x6235, 0x6571, 0x6896, 0x6BA3, 28310, 0x716D, 0x7428, 0x76C6, 0x7948, 0x7BAE, 0x7DF8, 0x8028, 0x823F, 0x843F, 0x8629, 0x87FF, 0x89C4, 0x8B78, 0x8D1F, 0x8EB9, 0x904A, 37330, 0x9353, 0x94CF, 0x9647, 0x97BC, 0x9930, 0x9AA4, 0x9C17, 0x9D8C, 0x9F03, 0xA07C, 0xA1F7, 0xA374, 0xA4F5, 0xA677, 0xA7FD, 0xA985, 0xAB0F, 0xAC9A, 0xAE27, 0xAFB6, 0xB145, 45780, 0xB463, 0xB5F2, 0xB77F, 0xB90B, 0xBA95, 0xBC1C, 0xBDA1, 48930, 0xC0A0, 49690, 0xC390, 0xC501, 0xC66E, 0xC7D6, 0xC939, 0xCA96, 0xCBEE, 0xCD40, 0xCE8D, 0xCFD4, 0xD116, 0xD252, 0xD388, 0xD4B9, 0xD5E4, 55050, 0xD82A, 0xD945, 0xDA5A, 56170, 0xDC74, 0xDD79, 0xDE79, 0xDF74, 0xE069, 0xE159, 0xE244, 0xE32A, 0xE40A, 0xE4E6, 0xE5BC, 0xE68E, 0xE75A, 0xE822, 59620, 59810, 0xEA5A, 0xEB0D, 0xEBBC, 0xEC65, 0xED09, 60840, 0xEE41, 0xEED5, 0xEF64, 0xEFED, 0xF071, 0xF0EF, 61800, 0xF1DC, 0xF24A, 0xF2B3, 0xF317, 0xF376, 0xF3D1, 0xF427, 0xF479, 0xF4C7, 0xF511, 0xF557, 0xF59A, 0xF5DA, 0xF617, 0xF651, 0xF689, 0xF6BE, 0xF6F1, 0xF722, 0xF752, 0xF77F, 0xF7AC, 0xF7D6, 0xF800, 0xF828, 0xF84F, 0xF875, 0xF89A, 0xF8BE, 0xF8E1, 0xF904, 0xF925, 0xF947, 0xF967, 0xF987, 0xF9A7, 0xF9C6, 0xF9E5, 0xFA03, 0xFA21, 0xFA3F, 0xFA5C, 0xFA79, 64150, 0xFAB3, 0xFACF, 0xFAEB, 0xFB07, 0xFB23, 0xFB3F, 0xFB5B, 0xFB76, 0xFB91, 0xFBAC, 0xFBC7, 0xFBE1, 0xFBFC, 0xFC16, 0xFC30, 0xFC49, 64610, 0xFC7B, 64660, 0xFCAD, 64710, 0xFCDE, 0xFCF6, 0xFD0E, 0xFD27, 0xFD3F, 0xFD57, 0xFD6E, 0xFD86, 0xFD9E, 64950, 0xFDCE, 0xFDE6, 0xFDFE, 0xFE15, 0xFE2D, 0xFE45, 0xFE5C, 0xFE73, 0xFE8B, 0xFEA2, 0xFEB9, 0xFECF, 0xFEE6, 0xFEFC, 0xFF13, 0xFF29, 0xFF3F, 0xFF54, 0xFF6A, 0xFF80, 0xFF95, 65450, 0xFFBF, 0xFFD5, 0xFFEA, math.MaxUint16}
var SKP_Silk_pitch_lag_WB_CDF_offset int32 = 86
var SKP_Silk_pitch_lag_SWB_CDF [386]uint16 = [386]uint16{0, 253, 505, 757, 1008, 1258, 1507, 1755, 2003, 2249, 2494, 2738, 2982, 3225, 3469, 3713, 3957, 4202, 4449, 4698, 4949, 5203, 5460, 5720, 5983, 6251, 6522, 6798, 7077, 7361, 7650, 7942, 8238, 8539, 8843, 9150, 9461, 9775, 0x276C, 0x28AB, 0x29ED, 0x2B31, 0x2C77, 11710, 0x2F07, 12370, 0x319D, 0x32EA, 0x3438, 0x3587, 14040, 0x3829, 0x397C, 0x3AD0, 0x3C26, 0x3D7E, 0x3ED7, 0x4033, 0x4191, 0x42F1, 0x4454, 17850, 0x4724, 0x4891, 0x4A02, 0x4B76, 0x4CEF, 0x4E6B, 20460, 0x5171, 0x52FB, 21640, 0x5619, 0x57AF, 0x5948, 0x5AE5, 0x5C84, 0x5E27, 0x5FCC, 0x6173, 0x631C, 0x64C6, 0x6671, 0x681C, 0x69C7, 0x6B70, 0x6D19, 0x6EC0, 0x7065, 0x7207, 0x73A6, 0x7542, 0x76DB, 0x786F, 0x79FF, 0x7B8B, 0x7D12, 0x7E94, 0x8012, 0x818B, 0x82FF, 0x846E, 0x85D8, 0x873D, 0x889D, 35320, 0x8B4F, 36000, 0x8DED, 0x8F36, 0x9079, 0x91B8, 0x92F3, 0x9429, 0x955A, 0x9687, 0x97AF, 0x98D2, 0x99F1, 0x9B0C, 39970, 0x9D34, 0x9E41, 0x9F4A, 0xA04F, 0xA14F, 0xA24C, 0xA344, 0xA439, 0xA52A, 42520, 0xA702, 0xA7E9, 0xA8CD, 0xA9AE, 43660, 43880, 0xAC41, 0xAD18, 0xADED, 0xAEC0, 0xAF91, 0xB061, 0xB12F, 0xB1FD, 0xB2C9, 0xB394, 0xB45F, 0xB529, 0xB5F2, 46780, 0xB785, 0xB84E, 0xB917, 0xB9E1, 0xBAAB, 0xBB75, 0xBC40, 0xBD0B, 0xBDD7, 0xBEA4, 0xBF71, 0xC03F, 0xC10E, 49630, 0xC2AF, 0xC381, 0xC453, 50470, 0xC5FA, 0xC6CE, 0xC7A3, 51320, 0xC94D, 0xCA23, 0xCAF9, 0xCBCF, 0xCCA4, 0xCD79, 0xCE4D, 0xCF21, 0xCFF4, 0xD0C6, 0xD197, 0xD267, 0xD335, 0xD402, 0xD4CD, 0xD597, 0xD65F, 0xD726, 0xD7EA, 0xD8AD, 0xD96E, 0xDA2D, 0xDAEA, 56230, 0xDC5F, 0xDD16, 0xDDCB, 0xDE7F, 0xDF30, 0xDFDF, 0xE08C, 0xE136, 0xE1DF, 0xE285, 0xE328, 0xE3CA, 0xE469, 0xE505, 0xE59F, 0xE637, 0xE6CC, 59230, 0xE7ED, 0xE87A, 0xE904, 0xE98B, 0xEA0F, 0xEA90, 0xEB0E, 0xEB89, 0xEC01, 0xEC75, 0xECE7, 0xED55, 0xEDC1, 0xEE29, 61070, 0xEEEF, 0xEF4E, 0xEFA9, 0xF002, 0xF057, 0xF0A9, 0xF0F9, 0xF145, 0xF18F, 61910, 0xF21B, 0xF25D, 0xF29D, 62170, 62230, 0xF34F, 0xF387, 0xF3BC, 0xF3F0, 0xF422, 0xF453, 0xF482, 0xF4B0, 0xF4DD, 0xF508, 62770, 0xF55B, 0xF584, 0xF5AB, 0xF5D1, 0xF5F7, 0xF61C, 0xF640, 0xF663, 63110, 0xF6A9, 0xF6CA, 0xF6EC, 0xF70C, 0xF72D, 0xF74C, 63340, 0xF78B, 0xF7AA, 0xF7C8, 0xF7E6, 0xF803, 0xF821, 63550, 0xF85A, 0xF877, 0xF893, 0xF8AF, 63690, 0xF8E6, 0xF900, 0xF91B, 0xF936, 0xF950, 63850, 0xF983, 63900, 0xF9B5, 63950, 0xF9E7, 0xF9FF, 0xFA17, 0xFA2E, 0xFA45, 0xFA5C, 0xFA73, 0xFA8A, 0xFAA0, 0xFAB6, 0xFACC, 0xFAE1, 0xFAF7, 0xFB0C, 0xFB21, 64310, 64330, 0xFB5F, 0xFB73, 0xFB87, 0xFB9B, 0xFBAF, 64450, 64470, 0xFBE9, 0xFBFC, 0xFC0F, 0xFC21, 0xFC34, 0xFC46, 64600, 0xFC69, 0xFC7B, 0xFC8C, 0xFC9D, 0xFCAE, 0xFCBE, 0xFCCF, 0xFCDF, 64750, 0xFCFE, 0xFD0E, 0xFD1D, 0xFD2C, 0xFD3B, 0xFD4A, 0xFD59, 0xFD68, 0xFD76, 0xFD85, 0xFD93, 64930, 0xFDB0, 0xFDBF, 0xFDCE, 0xFDDC, 0xFDEB, 0xFDFA, 0xFE09, 0xFE18, 0xFE27, 0xFE36, 0xFE46, 0xFE55, 0xFE65, 0xFE75, 0xFE85, 0xFE94, 0xFEA4, 0xFEB4, 65220, 0xFED4, 0xFEE4, 0xFEF4, 0xFF03, 0xFF13, 0xFF22, 65330, 0xFF41, 0xFF50, 0xFF5F, 65390, 0xFF7D, 0xFF8B, 0xFF9A, 0xFFA9, 0xFFB7, 0xFFC5, 0xFFD4, 0xFFE2, 0xFFF1, math.MaxUint16}
var SKP_Silk_pitch_lag_SWB_CDF_offset int32 = 128
var SKP_Silk_pitch_contour_CDF [35]uint16 = [35]uint16{0, 372, 843, 1315, 1836, 2644, 3576, 4719, 6088, 7621, 9396, 0x2CF5, 0x37A5, 0x44D2, 0x5129, 0x5EE6, 0x6D58, 0x815C, 40100, 0xAD29, 0xB9C6, 0xC5F7, 53130, 0xD905, 57510, 0xE68E, 0xEB7D, 0xEFA1, 0xF36C, 63140, 0xF912, 0xFB41, 0xFCD9, 0xFE4B, math.MaxUint16}
var SKP_Silk_pitch_contour_CDF_offset int32 = 17
var SKP_Silk_pitch_delta_CDF [23]uint16 = [23]uint16{0, 343, 740, 1249, 1889, 2733, 3861, 5396, 7552, 10890, 0x3EB5, 0x5E58, 30220, 34680, 0x9455, 0x9DD5, 0xA503, 0xAABC, 0xAF17, 0xB2CD, 0xB57E, 0xB7CF, math.MaxUint16}
var SKP_Silk_pitch_delta_CDF_offset int32 = 11
