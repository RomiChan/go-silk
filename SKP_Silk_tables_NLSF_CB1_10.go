package silk

import "math"

const NLSF_MSVQ_CB1_10_STAGES = 6
const NLSF_MSVQ_CB1_10_VECTORS = 72

var SKP_Silk_NLSF_MSVQ_CB1_10_CDF [78]uint16 = [78]uint16{0, 0x42C8, 24130, 0x7145, 0x819B, 0x8F58, 0x9D15, 0xA5FD, 0xACDC, 0xB395, 0xB9BF, 0xBFC7, 0xC56E, 0xCABA, 0xCFCC, 0xD4DF, 0xD985, 0xDE13, 0xE195, 0xE504, 0xE82B, 0xEB2F, 0xED45, 61220, 61700, 0xF2E3, 0xF4C3, 0xF6A2, 0xF881, 0xFA61, 0xFC40, 0xFE20, math.MaxUint16, 0, 0x4F9A, 0x8108, 0x9DCB, 0xB681, 0xC9FB, 0xDD09, 0xEEE5, math.MaxUint16, 0, 0x3ACF, 0x6380, 0x8A77, 0xA605, 0xBF49, 0xD5F5, 0xEB34, math.MaxUint16, 0, 0x2F25, 22440, 0x802C, 0x9CD1, 46870, 0xD15B, 59630, math.MaxUint16, 0, 0x2A57, 0x4DF2, 0x6D35, 0x8C79, 0xABBD, 0xC909, 0xE5B5, math.MaxUint16, 0, 8933, 0x450A, 0x672F, 0x87E1, 0xA7E1, 50820, 0xE480, math.MaxUint16}
var SKP_Silk_NLSF_MSVQ_CB1_10_CDF_start_ptr [6]*uint16 = [6]*uint16{&SKP_Silk_NLSF_MSVQ_CB1_10_CDF[0], &SKP_Silk_NLSF_MSVQ_CB1_10_CDF[33], &SKP_Silk_NLSF_MSVQ_CB1_10_CDF[42], &SKP_Silk_NLSF_MSVQ_CB1_10_CDF[51], &SKP_Silk_NLSF_MSVQ_CB1_10_CDF[60], &SKP_Silk_NLSF_MSVQ_CB1_10_CDF[69]}
var SKP_Silk_NLSF_MSVQ_CB1_10_CDF_middle_idx [6]int32 = [6]int32{5, 3, 4, 4, 5, 5}
var SKP_Silk_NLSF_MSVQ_CB1_10_rates_Q5 [72]int16 = [72]int16{62, 103, 120, math.MaxInt8, 135, 135, 155, 167, 168, 172, 173, 176, 179, 181, 181, 185, 186, 198, 199, 203, 205, 222, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 54, 76, 101, 108, 119, 120, 123, 125, 68, 85, 87, 103, 107, 112, 115, 116, 78, 85, 85, 101, 105, 105, 110, 111, 83, 91, 97, 97, 97, 100, 101, 105, 92, 93, 93, 95, 96, 98, 99, 103}
var SKP_Silk_NLSF_MSVQ_CB1_10_ndelta_min_Q15 [11]int32 = [11]int32{462, 3, 64, 74, 98, 50, 97, 68, 120, 53, 639}
var SKP_Silk_NLSF_MSVQ_CB1_10_Q15 [720]int16 = [720]int16{1877, 4646, 7712, 0x29F9, 0x368C, 0x4284, 0x4F0F, 0x5A8E, 0x6767, 0x7267, 1612, 3278, 7086, 9975, 0x33AC, 0x3F88, 0x4C8C, 22690, 0x65B5, 0x7125, 2169, 3830, 6460, 8958, 11960, 14750, 0x47E8, 0x549B, 0x61BA, 0x6D8B, 3680, 6024, 8986, 0x2FE0, 0x3B61, 0x470C, 0x54ED, 24460, 0x6B5C, 0x756B, 2584, 5187, 7799, 0x2A96, 0x337B, 0x3D95, 0x4A49, 0x579F, 0x6523, 0x701A, 3731, 5751, 8650, 0x2DDE, 15090, 0x43FF, 0x4FA7, 0x5B7D, 0x6674, 0x723F, 2107, 6323, 8915, 0x2FC2, 0x39B7, 0x457F, 0x50B8, 0x5C7F, 0x68CD, 0x72A9, 1677, 2870, 5386, 8077, 0x2E29, 0x3B48, 0x48E1, 0x55F6, 0x63A9, 0x7011, 2111, 3625, 7027, 0x295C, 0x36EB, 0x4329, 0x5291, 24260, 0x6BB9, 0x7554, 2428, 4010, 5765, 9376, 0x35ED, 0x3DCD, 0x4BF4, 0x5775, 0x62CF, 29310, 2256, 4628, 8377, 0x3099, 0x3BB3, 0x4C06, 0x56F1, 0x63CF, 0x6F10, 0x7660, 2352, 3675, 6129, 0x2E5C, 0x38D7, 0x410F, 0x4CA8, 0x557B, 0x679E, 0x70B1, 5243, 7248, 0x293E, 0x33D5, 0x3D23, 0x45FF, 0x5295, 0x5D13, 0x69DE, 0x734F, 4422, 6725, 0x28D1, 0x33D9, 0x3EFC, 0x4DD1, 0x592A, 0x65CD, 0x705B, 0x7777, 4508, 6291, 9504, 0x2E21, 0x3603, 15950, 0x4A85, 0x5644, 25740, 0x6FF2, 2540, 4297, 8579, 0x350A, 0x40FA, 0x4A9D, 0x542B, 0x5D4F, 0x6899, 0x71DA, 3377, 6358, 0x27F0, 0x38B6, 0x45F1, 0x5240, 0x5C55, 0x64B8, 0x6E01, 0x759D, 4177, 5942, 8159, 0x277C, 12130, 15470, 0x4EDF, 0x5B1E, 0x689E, 0x72AF, 2492, 3801, 6144, 9825, 16000, 0x48EF, 0x519D, 0x5C6F, 0x652B, 0x712E, 3011, 4727, 6834, 0x2909, 0x30B1, 0x38A0, 0x42A9, 0x4E54, 0x62B1, 0x6D99, 4149, 7197, 0x3032, 0x3AE4, 0x4652, 20190, 0x56AB, 0x6093, 0x69CB, 0x71C5, 2975, 4578, 6448, 8378, 9671, 0x33A9, 0x4C2E, 0x5705, 0x65CA, 28850, 4102, 5760, 7744, 9484, 0x29F8, 0x3014, 0x3955, 0x4C97, 0x6109, 0x6EDD, 4931, 9287, 0x30BD, 0x3453, 0x3590, 0x380F, 0x3EB0, 0x4D9B, 0x5E7C, 0x7142, 4141, 7867, 13140, 17720, 0x4E60, 0x5274, 0x54BC, 0x58C2, 0x5CB8, 0x6B39, 4011, 8720, 0x33B2, 0x3F4E, 0x44C1, 0x4771, 0x485C, 0x4CE9, 0x5AC2, 0x6CEA, 3420, 5995, 11230, 0x3B0D, 0x3E23, 0x418F, 0x4562, 0x5B33, 0x6912, 0x74FA, 3080, 6786, 0x28E1, 0x356C, 0x468B, 0x5C3F, 0x69B2, 0x719A, 0x737B, 0x74D1, 3038, 5620, 9266, 12870, 0x4973, 19610, 20010, 0x5142, 0x5D4A, 0x727A, 3314, 6420, 9046, 0x33CE, 0x3DFD, 0x5A4D, 0x5C73, 0x5E97, 0x5FA7, 0x653B, 3469, 6963, 0x2777, 0x3BB2, 0x5033, 23240, 0x61C0, 0x65A5, 0x6870, 0x6A77, 3041, 6459, 9777, 0x3260, 0x3FBB, 19410, 24070, 0x72A9, 0x7C33, 0x7D4B, -200, -134, -113, -204, -347, -440, -352, -211, -418, -172, -313, 59, 495, 772, 721, 614, 334, 444, 225, 242, 161, 16, 274, 564, -73, -188, -395, -171, 777, 508, 1340, 1145, 699, 196, 223, 173, 90, 25, -26, 18, 133, -105, -360, -277, 859, 634, 41, -557, -768, -926, -601, -1021, -1189, -365, 225, 107, 374, -50, 433, 417, 156, 39, -597, -1397, -1594, -592, -485, -292, 253, 87, 0, -6, -25, -345, -240, 120, 1261, 946, 166, -277, 241, 167, 170, 429, 518, 714, 602, 254, 134, 92, -152, -324, -394, 49, -151, -304, -724, -657, -162, -369, -35, 3, -2, -312, -200, -92, -227, 242, 628, 565, -124, 1056, 770, 101, -84, -33, 4, -192, -272, 5, -627, -977, 419, 472, 53, -103, 145, 322, -95, -31, -100, -303, -560, -1067, -413, 714, 283, 2, -223, -367, 523, 360, -38, -115, 378, -591, -718, 448, -481, -274, 180, -88, -581, -157, -696, -1265, 394, -479, -23, 124, -43, 19, -113, -236, -412, -659, -200, 2, -69, -342, 199, 55, 58, -36, -51, -62, 507, 507, 427, 442, 36, 601, -141, 68, 274, 274, 68, -12, -4, 71, -193, -464, -425, -383, 408, 203, -337, 236, 410, -59, -25, -341, -449, 28, -9, 90, 332, -14, -905, 96, -540, -242, 679, -59, 192, -24, 60, -217, 5, -37, 179, -20, 311, 519, 274, 72, -326, -1030, -262, 213, 380, 82, 328, 411, -540, 574, -283, 151, 181, -402, -278, -240, -110, -227, -264, -89, -250, -259, -27, 106, -239, -98, -390, 118, 61, 104, 294, 532, 92, -13, 60, -233, 335, 541, 307, -26, -110, -91, -231, -460, 170, 201, 96, -372, 132, 435, -302, 216, -279, -41, 74, 190, 368, 273, -186, -608, -157, 159, 12, 278, 245, 307, 25, -187, -16, 55, 30, -163, 548, -307, 106, -5, 27, 330, -416, 475, 438, -235, 104, 137, 21, -5, -300, -468, 521, -347, 170, -200, -219, 308, -122, -133, 219, -16, 359, 412, -89, -111, 48, 322, 142, 177, -286, -127, -39, -63, -42, -451, 160, 308, -57, 193, -48, 74, -346, 59, -27, 27, -469, -277, -344, 282, 262, 122, 171, -249, 27, 258, 188, -3, 67, -206, -284, 291, -117, -88, -477, 375, 50, 106, 99, -182, 438, -376, -401, -49, 119, -23, -10, -48, -116, -200, -310, 121, 73, 7, 237, -226, 139, -456, 397, 35, 3, -108, 323, -75, 332, 198, -99, -21}
var SKP_Silk_NLSF_CB1_10_Stage_info [6]SKP_Silk_NLSF_CBS = [6]SKP_Silk_NLSF_CBS{{NVectors: 32, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_10_Q15[10*0], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_10_rates_Q5[0]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_10_Q15[10*32], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_10_rates_Q5[32]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_10_Q15[10*40], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_10_rates_Q5[40]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_10_Q15[10*48], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_10_rates_Q5[48]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_10_Q15[10*56], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_10_rates_Q5[56]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_10_Q15[10*64], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_10_rates_Q5[64]}}
var SKP_Silk_NLSF_CB1_10 SKP_Silk_NLSF_CB_struct = SKP_Silk_NLSF_CB_struct{NStages: NLSF_MSVQ_CB1_10_STAGES, CBStages: &SKP_Silk_NLSF_CB1_10_Stage_info[0], NDeltaMin_Q15: &SKP_Silk_NLSF_MSVQ_CB1_10_ndelta_min_Q15[0], CDF: &SKP_Silk_NLSF_MSVQ_CB1_10_CDF[0], StartPtr: &SKP_Silk_NLSF_MSVQ_CB1_10_CDF_start_ptr[0], MiddleIx: &SKP_Silk_NLSF_MSVQ_CB1_10_CDF_middle_idx[0]}
