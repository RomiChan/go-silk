package silk

import "math"

const NLSF_MSVQ_CB1_16_STAGES = 10
const NLSF_MSVQ_CB1_16_VECTORS = 104

var SKP_Silk_NLSF_MSVQ_CB1_16_CDF [114]uint16 = [114]uint16{0, 0x4A9B, 0x694D, 0x77AF, 0x85C2, 0x92AA, 0x9DFF, 0xA917, 0xB3B5, 0xBD3D, 0xC2C9, 0xC854, 0xCDC1, 0xD2D7, 0xD7B5, 0xDC79, 0xDFB3, 0xE2A9, 0xE518, 0xE760, 0xE978, 0xEB58, 0xED39, 61210, 61690, 0xF2DB, 0xF4BB, 0xF69C, 0xF87D, 0xFA5D, 0xFC3E, 0xFE1E, math.MaxUint16, 0, 0x7088, 0x9777, 0xB6D1, 0xCA49, 0xDA4E, 59410, 0xF46C, math.MaxUint16, 0, 0x6AF0, 0x96EF, 0xAFFC, 0xC909, 0xD898, 0xE68D, 0xF482, math.MaxUint16, 0, 0x827B, 0x9A91, 0xB02E, 0xC329, 0xD31F, 0xE267, 0xF15C, math.MaxUint16, 0, 0x64FB, 0xA95C, 0xBAD4, 0xCBEC, 0xDA9C, 0xE815, 0xF42B, math.MaxUint16, 0, 0x85E5, 0x9D91, 0xB178, 0xC487, 0xD436, 0xE33B, 0xF19D, math.MaxUint16, 0, 0x8302, 0x9BB9, 0xB0F6, 0xC39C, 0xD515, 0xE46E, 0xF2CF, math.MaxUint16, 0, 0x6B35, 0x89BA, 0x9ED9, 0xB3F8, 0xC8A2, 56540, 0xEE9E, math.MaxUint16, 0, 0x5640, 0x783B, 0x90C9, 0xA84D, 0xBED1, 0xD555, 0xEAE5, math.MaxUint16, 0, 0x3469, 0x54F4, 0x757E, 0x9557, 0xB52F, 0xCF63, 0xE87B, math.MaxUint16}
var SKP_Silk_NLSF_MSVQ_CB1_16_CDF_start_ptr [10]*uint16 = [10]*uint16{&SKP_Silk_NLSF_MSVQ_CB1_16_CDF[0], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[33], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[42], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[51], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[60], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[69], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[78], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[87], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[96], &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[105]}
var SKP_Silk_NLSF_MSVQ_CB1_16_CDF_middle_idx [10]int32 = [10]int32{5, 2, 2, 2, 2, 2, 2, 3, 3, 4}
var SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5 [104]int16 = [104]int16{57, 98, 133, 134, 138, 144, 145, 147, 152, 177, 177, 178, 181, 183, 184, 202, 206, 215, 218, 222, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 38, 87, 97, 119, 128, 135, 140, 143, 40, 81, 107, 107, 129, 134, 134, 143, 31, 109, 114, 120, 128, 130, 131, 132, 43, 61, 124, 125, 132, 136, 141, 142, 30, 110, 118, 120, 129, 131, 133, 133, 31, 108, 115, 121, 124, 130, 133, 137, 40, 98, 115, 115, 116, 117, 123, 124, 50, 93, 108, 110, 112, 112, 114, 115, 73, 95, 95, 96, 96, 105, 107, 110}
var SKP_Silk_NLSF_MSVQ_CB1_16_ndelta_min_Q15 [17]int32 = [17]int32{148, 3, 60, 68, 117, 86, 121, 124, 152, 153, 207, 151, 225, 239, 126, 183, 792}
var SKP_Silk_NLSF_MSVQ_CB1_16_Q15 [1664]int16 = [1664]int16{1309, 3060, 5071, 6996, 9028, 0x2ABA, 0x3286, 0x3A2B, 0x4225, 0x49A6, 0x5138, 0x58EC, 0x60B1, 0x6823, 0x6FD2, 0x7725, 1264, 2745, 4610, 6408, 8286, 0x273B, 0x2F34, 0x371C, 0x3EF6, 0x46F3, 0x4E7F, 0x5694, 0x5EC8, 0x66CC, 0x6EA9, 0x762B, 1044, 2080, 3672, 5179, 7140, 9100, 11070, 0x3309, 0x3C3F, 17790, 0x4DDB, 0x5655, 24290, 0x66F9, 0x6F53, 0x76D2, 1131, 2476, 4478, 6149, 7902, 9875, 0x2EA2, 0x35F1, 0x3DFD, 17730, 0x4DEC, 0x54CB, 0x5CD1, 0x63BF, 0x6B22, 0x70F5, 1040, 2004, 4026, 6100, 8432, 0x28FE, 12610, 0x3966, 0x419D, 0x4957, 0x513F, 0x58FE, 0x60C4, 0x683A, 0x6FD7, 0x7734, 2310, 3812, 5913, 7933, 0x2731, 0x2E69, 0x363D, 0x3DB6, 0x4557, 0x4C78, 0x53EA, 0x5AEC, 0x6245, 27010, 0x70A1, 0x779F, 1254, 2847, 5013, 6781, 8626, 10370, 0x31B6, 0x3929, 0x3F99, 0x45BC, 19870, 0x53E0, 0x59DA, 0x6035, 26710, 27960, 1468, 3059, 4987, 7026, 8741, 0x28AC, 0x2FF9, 14020, 15970, 0x453B, 19640, 0x5412, 0x5BB0, 0x643D, 0x6D52, 0x7611, 2171, 3566, 5605, 7384, 9404, 11220, 13030, 0x39A6, 0x412F, 0x47F1, 0x4F7A, 0x564B, 0x5DF7, 0x6664, 0x6EC4, 0x76BD, 2409, 4676, 7543, 9786, 0x2C9B, 0x3287, 0x3820, 0x3D25, 0x43D6, 0x49FF, 0x511A, 0x57CD, 24440, 0x66D7, 0x6E7C, 0x7622, 2354, 4222, 6820, 9107, 0x2D4C, 0x366E, 0x3E65, 0x4512, 0x4AD6, 0x5025, 0x55E7, 23420, 0x625A, 0x6938, 0x707A, 0x773F, 1323, 2414, 4184, 6039, 7534, 9398, 0x2B5B, 0x3329, 0x39CF, 0x4043, 0x4802, 0x5197, 23490, 0x64EE, 0x6D8E, 0x7611, 1361, 3243, 6048, 8511, 0x2AF9, 0x3359, 0x3AE1, 0x40E0, 0x46CE, 0x4BB5, 0x51B0, 0x584F, 24660, 0x682C, 0x6FF7, 0x7766, 1216, 2648, 5901, 8422, 0x2735, 0x2CA1, 0x32AD, 0x390B, 0x412E, 18600, 0x504B, 0x578F, 24450, 26280, 0x6E2E, 0x757D, 2417, 4048, 6316, 8433, 10510, 0x31D5, 0x3AE0, 0x438F, 0x4C75, 0x53FF, 0x5B21, 0x60CE, 0x667B, 0x6C29, 0x721E, 0x7863, 1012, 2345, 4991, 7377, 9465, 0x2E8C, 0x37D8, 0x40B6, 0x48F0, 0x5040, 0x5714, 0x5D1E, 0x6347, 27050, 0x70B0, 0x7757, 1937, 3693, 6267, 8019, 0x2884, 0x2FA2, 0x37CF, 0x3D29, 0x4417, 0x49B0, 0x5121, 0x56BE, 0x5DE5, 0x6377, 0x6AF7, 0x6FBA, 1969, 3305, 5017, 6726, 8375, 9993, 0x2D72, 0x33E0, 0x3AE6, 0x416F, 0x4820, 0x4E97, 0x55C7, 0x5D32, 0x6670, 0x7272, 1198, 2647, 5428, 7423, 9775, 0x2F7B, 0x3949, 0x3FD8, 0x46C9, 19790, 0x5435, 0x593F, 0x5FA4, 0x648E, 0x6BF7, 0x7027, 1636, 3353, 5447, 7597, 9837, 0x2D7F, 0x368C, 0x3E93, 0x45C6, 0x4E94, 0x572F, 0x5DE5, 0x656E, 0x6DB6, 0x74DA, 0x7A3E, 2676, 4105, 6378, 8223, 0x274A, 0x2D1D, 0x3310, 0x3875, 0x3E54, 0x43CB, 0x49F3, 0x4FB2, 0x56A7, 0x5D4C, 0x6475, 0x6C4B, 1373, 2593, 4449, 5633, 7300, 8425, 9474, 0x2A42, 0x31E1, 0x3D6A, 0x4A3A, 0x53B5, 0x5C82, 0x6544, 0x6DE7, 0x767D, 1596, 3183, 5378, 7164, 8670, 0x2779, 11470, 0x3222, 0x36A7, 0x3AC2, 0x4102, 0x45EF, 0x5117, 0x62C3, 27770, 0x7620, 2037, 3987, 6237, 8117, 9954, 0x2FD5, 0x3789, 0x3E14, 0x456F, 0x4E92, 0x572A, 0x6556, 0x66C1, 0x6773, 0x68AC, 0x6F91, 2181, 3858, 5760, 7924, 0x2739, 0x2D39, 0x35C9, 15700, 0x4415, 0x4DA7, 0x5C1F, 0x5FDA, 0x627C, 0x645D, 0x7010, 0x772B, 1992, 3882, 6474, 7883, 9381, 0x3180, 14340, 0x3D55, 0x4112, 0x45A8, 20850, 0x5965, 0x6065, 0x6759, 0x6F4B, 30460, 2391, 3988, 5448, 7432, 0x2B06, 0x3123, 13140, 0x3742, 0x3E1A, 0x48A0, 0x5270, 0x59D1, 0x6061, 0x6A32, 0x6DEE, 0x73AC, 1713, 5102, 6989, 7798, 8670, 10110, 0x31CA, 0x3A21, 0x4145, 0x47E7, 0x4E9E, 0x565B, 0x5E75, 0x6656, 0x6E4D, 0x75B9, 1612, 3617, 6148, 8359, 9576, 0x2D08, 0x3A58, 0x4591, 0x476F, 0x4929, 0x4A39, 0x5277, 0x6037, 0x67E4, 28740, 0x77B3, 2266, 4168, 7862, 9546, 9618, 9703, 0x2796, 0x3649, 0x3F89, 0x4800, 0x506B, 0x584D, 0x60B2, 0x6972, 0x71C5, 30840, 1840, 3917, 6272, 7809, 9714, 0x2CAE, 0x35C7, 0x3DB7, 0x4B2C, 0x55D4, 22980, 23180, 0x5CAB, 25650, 0x71BD, 0x796D, 1458, 3612, 6008, 7488, 9827, 0x2E75, 0x3706, 0x3D76, 0x4420, 0x4C4F, 0x5798, 0x60BF, 0x723E, 0x74E8, 0x7734, 0x78E3, -102, -121, -31, -6, 5, -2, 8, -18, -4, 6, 14, -2, -12, -16, -12, -60, -126, -353, -574, -677, -657, -617, -498, -393, -348, -277, -225, -164, -102, -70, -31, 33, 4, 379, 387, 551, 605, 620, 532, 482, 442, 454, 385, 347, 322, 299, 266, 200, 1168, 951, 672, 246, 60, -161, -259, -234, -253, -282, -203, -187, -155, -176, -198, -178, 10, 170, 393, 609, 555, 208, -330, -571, -769, -633, -319, -43, 95, 105, 106, 116, -152, -140, -125, 5, 173, 274, 264, 331, -37, -293, -609, -786, -959, -814, -645, -238, -91, 36, -11, -101, -279, -227, -40, 90, 530, 677, 890, 1104, 999, 835, 564, 295, -280, -364, -340, -331, -284, 288, 761, 880, 988, 627, 146, -226, -203, -181, -142, 39, 24, -26, -107, -92, -161, -135, -131, -88, -160, -156, -75, -43, -36, -6, -33, 33, -324, -415, -108, 124, 157, 191, 203, 197, 144, 109, 152, 176, 190, 122, 101, 159, 663, 668, 480, 400, 379, 444, 446, 458, 343, 351, 310, 228, 133, 44, 75, 63, -84, 39, -29, 35, -94, -233, -261, -354, 77, 262, -24, -145, -333, -409, -404, -597, -488, -300, 910, 592, 412, 120, 130, -51, -37, -77, -172, -181, -159, -148, -72, -62, 510, 516, 113, -585, -1075, -957, -417, -195, 9, 7, -88, -173, -91, 54, 98, 95, -28, 197, -527, -621, 157, 122, -168, 147, 309, 300, 336, 315, 396, 408, 376, 106, -162, -170, -315, 98, 821, 908, 570, -33, -312, -568, -572, -378, -107, 23, 156, 93, -129, -87, 20, -72, -37, 40, 21, 27, 48, 75, 77, 65, 46, 71, 66, 47, 136, 344, 236, 322, 170, 283, 269, 291, 162, -43, -204, -259, -240, -305, -350, -312, 447, 348, 345, 257, 71, -131, -77, -190, -202, -40, 35, 133, 261, 365, 438, 303, -8, 22, 140, 137, -300, -641, -764, -268, -23, -25, 73, -162, -150, -212, -72, 6, 39, 78, 104, -93, -308, -136, 117, -71, -513, -820, -700, -450, -161, -23, 29, 78, 337, 106, -406, -782, -112, 233, 383, 62, -126, 6, -77, -29, -146, -123, -51, -27, -27, -381, -641, 402, 539, 8, -207, -366, -36, -27, -204, -227, -237, -189, -64, 51, -92, -137, -281, 62, 233, 92, 148, 294, 363, 416, 564, 625, 370, -36, -469, -462, 102, 168, 32, 117, -21, 97, 139, 89, 104, 35, 4, 82, 66, 58, 73, 93, -76, -320, -236, -189, -203, -142, -27, -73, 9, -9, -25, 12, -15, 4, 4, -50, 314, 180, 162, -49, 199, -108, -227, -66, -447, -67, -264, -394, 5, 55, -133, -176, -116, -241, 272, 109, 282, 262, 192, -64, -392, -514, 156, 203, 154, 72, -34, -160, -73, 3, -33, -431, 321, 18, -567, -590, -108, 88, 66, 51, -31, -193, -46, 65, -29, -23, 215, -31, 101, -113, 32, 304, 88, 320, 448, 5, -439, -562, -508, -135, -13, -171, -8, 182, -99, -181, -149, 376, 476, 64, -396, -652, -150, 176, 222, 65, -590, 719, 271, 399, 245, 72, -156, -152, -176, 59, 94, 125, -9, -7, 9, 1, -61, -116, -82, 1, 79, 22, -44, -15, -48, -65, -62, -101, -102, -54, -70, -78, -80, -25, 398, 71, 139, 38, 90, 194, 222, 249, 165, 94, 221, 262, 163, 91, -206, 573, 200, -287, -147, 5, -18, -85, -74, -125, -87, 85, 141, 4, -4, 28, 234, 48, -150, -111, -506, 237, -209, 345, 94, -124, 77, 121, 143, 12, -80, -48, 191, 144, -93, -65, -151, -643, 435, 106, 87, 7, 65, 102, 94, 68, 5, 99, 222, 93, 94, 355, -13, -89, -228, -503, 287, 109, 108, 449, 253, -29, -109, -116, 15, -73, -20, 131, -147, 72, 59, -150, -594, 273, 316, 132, 199, 106, 198, 212, 220, 82, 45, -13, 223, 137, 270, 38, 252, 135, -177, -207, -360, -102, 403, 406, -14, 83, 64, 51, -7, -99, -97, -88, -124, -65, 42, 32, 28, 29, 12, 20, 119, -26, -212, -201, 373, 251, 141, 103, 36, -52, 66, 18, -6, -95, -196, 5, 98, -85, -108, 218, -164, 20, 356, 172, 37, 266, 23, 112, -24, -99, -92, -178, 29, -278, 388, -60, -220, 300, -13, 154, 191, 15, -37, -110, -153, -150, -114, -7, -94, -31, -62, -177, 4, -70, 35, 453, 147, -247, -328, 101, 20, -114, 147, 108, -119, -109, -102, -238, 55, -102, 173, -89, 129, 138, -330, -160, 485, 154, -59, -170, -20, -34, -261, -40, -129, 77, -84, 69, 83, 160, 169, 63, -516, 30, 336, 52, 0, -52, -124, 158, 19, 197, -10, -375, 405, 285, 114, -395, -47, 196, 62, 87, -106, -65, -75, -69, -13, 34, 99, 59, 83, 98, 44, 0, 24, 18, 17, 70, -22, 194, 208, 144, -79, -15, 32, -104, -28, -105, -186, -212, -228, -79, -76, 51, -71, 72, 118, -34, -3, -171, 5, 2, -108, -125, 62, -58, 58, -121, 73, -466, 92, 63, -94, -78, -76, 212, 36, -225, -71, -354, 152, 143, -79, -246, -51, -31, -6, -270, 240, 210, 30, -157, -231, 74, -146, 88, -273, 156, 92, 56, 71, 2, 318, 164, 32, -110, -35, -41, -95, -106, 11, 132, -68, 55, 123, -83, -149, 212, 132, 0, -194, 55, 206, -108, -353, 289, -195, 1, 233, -22, -60, 20, 26, 68, 166, 27, -58, 130, 112, 107, 27, -165, 115, -93, -37, 38, 83, 483, 65, -229, -13, 157, 85, 50, 136, 10, 32, 83, 82, 55, 5, -9, -52, -78, -81, -51, 40, 18, -127, -224, -41, 53, -210, -113, 24, -17, -187, -89, 8, 121, 83, 77, 91, -74, -35, -112, -161, -173, 102, 132, -125, -61, 103, -260, 52, 166, -32, -156, -87, -56, 60, -70, -124, 242, 114, -251, -166, 201, math.MaxInt8, 28, -11, 23, -80, -115, -20, -51, -348, 340, -34, 133, 13, 92, -124, -136, -120, -26, -6, 17, 28, 21, 120, -168, 160, -35, 115, 28, 9, 7, -56, 39, 156, 256, -18, 1, 277, 82, -70, -144, -88, -13, -59, -157, 8, -134, 21, -40, 58, -21, 194, -276, 97, 279, -56, -140, 125, 57, -184, -204, -70, -2, 128, -202, -78, 230, -23, 161, -102, 1, 1, 180, -31, -86, -167, -57, -60, 27, -13, 99, 108, 111, 76, 69, 34, -21, 53, 38, 34, 78, 73, 219, 51, 15, -72, -103, -207, 30, 213, -14, 31, -94, -40, -144, 67, 4, 105, 59, -240, 25, 244, 69, 58, 23, -24, -5, -15, -133, -71, -67, 181, 29, -45, 121, 96, 51, -72, -53, 56, -153, -27, 85, 183, 211, 105, -34, -46, 43, -72, -93, 36, math.MinInt8, 29, 111, -95, -156, -179, -235, 21, -39, -71, -33, -61, -252, 230, -131, 157, -21, -85, -28, -123, 80, -160, 63, 47, -6, -49, -96, -19, 17, -58, 17, 0, -13, -170, 25, -35, 59, 10, -31, -413, 81, 62, 18, -164, 245, 92, -165, 42, 26, 126, -248, 193, -55, 16, 39, 14, 50}
var SKP_Silk_NLSF_CB1_16_Stage_info [10]SKP_Silk_NLSF_CBS = [10]SKP_Silk_NLSF_CBS{{NVectors: 32, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*0], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[0]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*32], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[32]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*40], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[40]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*48], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[48]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*56], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[56]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*64], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[64]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*72], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[72]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*80], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[80]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*88], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[88]}, {NVectors: 8, CB_NLSF_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_Q15[16*96], Rates_Q5: &SKP_Silk_NLSF_MSVQ_CB1_16_rates_Q5[96]}}
var SKP_Silk_NLSF_CB1_16 SKP_Silk_NLSF_CB_struct = SKP_Silk_NLSF_CB_struct{NStages: NLSF_MSVQ_CB1_16_STAGES, CBStages: &SKP_Silk_NLSF_CB1_16_Stage_info[0], NDeltaMin_Q15: &SKP_Silk_NLSF_MSVQ_CB1_16_ndelta_min_Q15[0], CDF: &SKP_Silk_NLSF_MSVQ_CB1_16_CDF[0], StartPtr: &SKP_Silk_NLSF_MSVQ_CB1_16_CDF_start_ptr[0], MiddleIx: &SKP_Silk_NLSF_MSVQ_CB1_16_CDF_middle_idx[0]}
